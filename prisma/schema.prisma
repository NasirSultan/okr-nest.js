generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL") 
}


model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  phone     String?
  language  String?  @default("en")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
model Strategy {
  id        Int      @id @default(autoincrement())
  title     String
  fileUrl   String
  createdAt DateTime @default(now())
}

model Role {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  exampleText String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Industry {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}




model user_role {
  id          Int      @id @default(autoincrement())
  user_id     String
  role_id     Int
  industry_id Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  expiresAt   DateTime @default(dbgenerated("NOW() + INTERVAL '1 day'"))
}





model Objective {
  id          Int    @id @default(autoincrement())
  strategy_id Int
  title       String @db.VarChar(200)
  description String?
  difficulty  Int    @default(1)

  @@map("objectives")
}

model KeyResult {
  id          Int      @id @default(autoincrement())
  objectiveId Int
  strategyId  Int?     // <- note the `?` makes it optional
  text        String
  expiresAt   DateTime @default(dbgenerated("NOW() + INTERVAL '1 day'"))
}


model KeywordBaseInnovative {
  id                Int      @id @default(autoincrement())
  strategy_id       Int
  key_result        String
  first_innovative  String
  second_innovative String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


model SoloScore {
  id                  Int      @id @default(autoincrement())
  userId              Int
  score               Int
  scor                Int?     // new optional field
  percentage          Int
  alignmentStrategy   Int      
  objectiveClarity    Int      
  keyResultQuality    Int     
  initiativeRelevance Int     
  challengeAdoption   Int      
  badge               String?  // optional, e.g., "Gold Navigator"
  trophy              String?  // optional, e.g., "Clarity Trophy"
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
}

